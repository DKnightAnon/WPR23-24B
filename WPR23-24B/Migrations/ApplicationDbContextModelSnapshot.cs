// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPR23_24B.Data;

#nullable disable

namespace WPR23_24B.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Contactpersoon_Bedrijf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BedrijfId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPersoonNaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BedrijfId");

                    b.ToTable("Contactpersonen", (string)null);
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Gebruiker", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BeperkingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HulpmiddelId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoonNummer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BeperkingId");

                    b.HasIndex("HulpmiddelId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Voogd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelefoonNummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Voogden", (string)null);
                });

            modelBuilder.Entity("WPR23_24B.Models.Medisch.Beperking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErvaringsdeskundigeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ErvaringsdeskundigeId");

                    b.ToTable("Beperkingen");
                });

            modelBuilder.Entity("WPR23_24B.Models.Medisch.Hulpmiddel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Doel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ErvaringsdeskundigeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ErvaringsdeskundigeId");

                    b.ToTable("Hulpmiddelen");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.Onderzoek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Locatie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Onderzoeken");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.Onderzoek_Resultaat", b =>
                {
                    b.Property<int>("OnderzoekResultaatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeelnemerId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OnderzoekId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Resultaat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OnderzoekResultaatId");

                    b.HasIndex("DeelnemerId");

                    b.HasIndex("OnderzoekId");

                    b.ToTable("OnderzoekResultaten");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.Onderzoek_Soort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OnderzoekId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OnderzoekId");

                    b.ToTable("OnderzoekSoorten");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Bedrijf", b =>
                {
                    b.HasBaseType("WPR23_24B.Models.Authenticatie.Gebruiker");

                    b.Property<string>("ContactPersoon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Locatie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackingID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("Bedrijven", (string)null);
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", b =>
                {
                    b.HasBaseType("WPR23_24B.Models.Authenticatie.Gebruiker");

                    b.Property<string>("AndereBeperking")
                        .HasColumnType("TEXT");

                    b.Property<bool>("AuditieveBeperkin")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BenaderingCommercieel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BenaderingPortal")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BenaderingTelefonisch")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FysiekeBeperking")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("GeboorteDatum")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsJongerDan18")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("VisueleBeperking")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VoogdId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("VoogdId");

                    b.ToTable("Ervaringsdeskundigen", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Gebruiker", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Gebruiker", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPR23_24B.Models.Authenticatie.Gebruiker", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Gebruiker", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Contactpersoon_Bedrijf", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Bedrijf", "Bedrijf")
                        .WithMany("Contactpersonen")
                        .HasForeignKey("BedrijfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bedrijf");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Gebruiker", b =>
                {
                    b.HasOne("WPR23_24B.Models.Medisch.Beperking", null)
                        .WithMany("GebruikerList")
                        .HasForeignKey("BeperkingId");

                    b.HasOne("WPR23_24B.Models.Medisch.Hulpmiddel", null)
                        .WithMany("gebruikers")
                        .HasForeignKey("HulpmiddelId");
                });

            modelBuilder.Entity("WPR23_24B.Models.Medisch.Beperking", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", null)
                        .WithMany("beperkingen")
                        .HasForeignKey("ErvaringsdeskundigeId");
                });

            modelBuilder.Entity("WPR23_24B.Models.Medisch.Hulpmiddel", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", null)
                        .WithMany("hulpmiddellen")
                        .HasForeignKey("ErvaringsdeskundigeId");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.Onderzoek_Resultaat", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", "Deelnemer")
                        .WithMany()
                        .HasForeignKey("DeelnemerId");

                    b.HasOne("WPR23_24B.Models.Onderzoek.Onderzoek", null)
                        .WithMany("Resultaten")
                        .HasForeignKey("OnderzoekId");

                    b.Navigation("Deelnemer");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.Onderzoek_Soort", b =>
                {
                    b.HasOne("WPR23_24B.Models.Onderzoek.Onderzoek", null)
                        .WithMany("OnderzoekSoorten")
                        .HasForeignKey("OnderzoekId");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Bedrijf", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Gebruiker", null)
                        .WithOne()
                        .HasForeignKey("WPR23_24B.Models.Authenticatie.Bedrijf", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Gebruiker", null)
                        .WithOne()
                        .HasForeignKey("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WPR23_24B.Models.Authenticatie.Voogd", "Voogd")
                        .WithMany()
                        .HasForeignKey("VoogdId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Voogd");
                });

            modelBuilder.Entity("WPR23_24B.Models.Medisch.Beperking", b =>
                {
                    b.Navigation("GebruikerList");
                });

            modelBuilder.Entity("WPR23_24B.Models.Medisch.Hulpmiddel", b =>
                {
                    b.Navigation("gebruikers");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.Onderzoek", b =>
                {
                    b.Navigation("OnderzoekSoorten");

                    b.Navigation("Resultaten");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Bedrijf", b =>
                {
                    b.Navigation("Contactpersonen");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", b =>
                {
                    b.Navigation("beperkingen");

                    b.Navigation("hulpmiddellen");
                });
#pragma warning restore 612, 618
        }
    }
}

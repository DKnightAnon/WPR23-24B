// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WPR23_24B.Data;

#nullable disable

namespace WPR23_24B.Migrations
{
    [DbContext(typeof(BedrijfsContext))]
    partial class WPR23_24BContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Bedrijf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bedrijfsnaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Locatie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackingID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Bedrijf");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Gebruiker", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("BeperkingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HulpmiddelId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefoon_Nummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BeperkingId");

                    b.HasIndex("HulpmiddelId");

                    b.ToTable("Gebruiker");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Gebruiker");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Voogd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Achternaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Voogd");
                });

            modelBuilder.Entity("WPR23_24B.Models.Medisch.Beperking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ErvaringsdeskundigeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ErvaringsdeskundigeId");

                    b.ToTable("Beperking");
                });

            modelBuilder.Entity("WPR23_24B.Models.Medisch.Hulpmiddel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Doel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("ErvaringsdeskundigeId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ErvaringsdeskundigeId");

                    b.ToTable("Hulpmiddel");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.Onderzoek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BedrijfId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Beschrijving")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Locatie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BedrijfId");

                    b.ToTable("Onderzoek");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.OnderzoekResultaat", b =>
                {
                    b.Property<int>("OnderzoekResultaatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeelnemerId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OnderzoekId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OnderzoekId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Resultaat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OnderzoekResultaatId");

                    b.HasIndex("DeelnemerId");

                    b.HasIndex("OnderzoekId");

                    b.HasIndex("OnderzoekId1");

                    b.ToTable("OnderzoekResultaat");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.Onderzoek_Soort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OnderzoekId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OnderzoekId");

                    b.ToTable("Onderzoek_Soort");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Contactpersoon_Bedrijf", b =>
                {
                    b.HasBaseType("WPR23_24B.Models.Authenticatie.Gebruiker");

                    b.Property<int>("BedrijfId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bedrijfsnaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Functie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasIndex("BedrijfId");

                    b.HasDiscriminator().HasValue("Contactpersoon_Bedrijf");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", b =>
                {
                    b.HasBaseType("WPR23_24B.Models.Authenticatie.Gebruiker");

                    b.Property<bool>("BenaderingCommercieel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BenaderingPortal")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("BenaderingTelefonisch")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("voogdId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("voogdId");

                    b.HasDiscriminator().HasValue("Ervaringsdeskundige");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Gebruiker", b =>
                {
                    b.HasOne("WPR23_24B.Models.Medisch.Beperking", null)
                        .WithMany("GebruikerList")
                        .HasForeignKey("BeperkingId");

                    b.HasOne("WPR23_24B.Models.Medisch.Hulpmiddel", null)
                        .WithMany("gebruikers")
                        .HasForeignKey("HulpmiddelId");
                });

            modelBuilder.Entity("WPR23_24B.Models.Medisch.Beperking", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", null)
                        .WithMany("beperkingen")
                        .HasForeignKey("ErvaringsdeskundigeId");
                });

            modelBuilder.Entity("WPR23_24B.Models.Medisch.Hulpmiddel", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", null)
                        .WithMany("hulpmiddellen")
                        .HasForeignKey("ErvaringsdeskundigeId");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.Onderzoek", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Bedrijf", null)
                        .WithMany("Onderzoeken")
                        .HasForeignKey("BedrijfId");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.OnderzoekResultaat", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", "Deelnemer")
                        .WithMany()
                        .HasForeignKey("DeelnemerId");

                    b.HasOne("WPR23_24B.Models.Onderzoek.Onderzoek", null)
                        .WithMany("OnderzoekResultaten")
                        .HasForeignKey("OnderzoekId");

                    b.HasOne("WPR23_24B.Models.Onderzoek.Onderzoek", null)
                        .WithMany("Resultaten")
                        .HasForeignKey("OnderzoekId1");

                    b.Navigation("Deelnemer");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.Onderzoek_Soort", b =>
                {
                    b.HasOne("WPR23_24B.Models.Onderzoek.Onderzoek", null)
                        .WithMany("OnderzoekSoorten")
                        .HasForeignKey("OnderzoekId");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Contactpersoon_Bedrijf", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Bedrijf", "Bedrijf")
                        .WithMany("Contactpersonen")
                        .HasForeignKey("BedrijfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bedrijf");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", b =>
                {
                    b.HasOne("WPR23_24B.Models.Authenticatie.Voogd", "voogd")
                        .WithMany()
                        .HasForeignKey("voogdId");

                    b.Navigation("voogd");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Bedrijf", b =>
                {
                    b.Navigation("Contactpersonen");

                    b.Navigation("Onderzoeken");
                });

            modelBuilder.Entity("WPR23_24B.Models.Medisch.Beperking", b =>
                {
                    b.Navigation("GebruikerList");
                });

            modelBuilder.Entity("WPR23_24B.Models.Medisch.Hulpmiddel", b =>
                {
                    b.Navigation("gebruikers");
                });

            modelBuilder.Entity("WPR23_24B.Models.Onderzoek.Onderzoek", b =>
                {
                    b.Navigation("OnderzoekResultaten");

                    b.Navigation("OnderzoekSoorten");

                    b.Navigation("Resultaten");
                });

            modelBuilder.Entity("WPR23_24B.Models.Authenticatie.Ervaringsdeskundige", b =>
                {
                    b.Navigation("beperkingen");

                    b.Navigation("hulpmiddellen");
                });
#pragma warning restore 612, 618
        }
    }
}
